name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  checks:
    name: Lint / Format Check / Tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'push' || github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        id: py
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "2.2.0"

      - name: Enable in-project venv
        run: poetry config virtualenvs.in-project true

      - name: Cache Poetry venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.py.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --no-interaction

      # ---- Static checks (no file modifications in CI) ----
      - name: Ruff lint
        run: poetry run ruff check .

      - name: Ruff format (check only)
        run: poetry run ruff format --check .

      # ---- Run tests with coverage threshold ----
      - name: Run tests with coverage
        run: |
          poetry run pytest \
            -q --maxfail=1 --disable-warnings \
            --cov=src --cov-report=term-missing \
            --cov-report=xml:coverage.xml \
            --cov-fail-under=100
